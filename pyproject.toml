[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "mkdoxy"
version = "2.0.0"
description = "MkDoxy → MkDocs + Doxygen = easy documentation generator with code snippets"
readme = "README.md"
keywords = ["mkdoxy", "python", "open-source", "documentation", "mkdocs", "doxygen", "multilanguage", "code-snippets", "code", "snippets", "documentation-generator"]
license = "MIT"
authors = [
    {name = "Jakub Andrýsek", email = "email@kubaandrysek.cz"}
]
maintainers = [
    {name = "Jakub Andrýsek", email = "email@kubaandrysek.cz"}
]
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]
dependencies = [
    "mkdocs>=1.4.0",
]

[project.optional-dependencies]
dev = [
    "mkdocs-material~=9.6.18",
    "mkdocs-open-in-new-tab~=1.0.8",
    "pathlib~=1.0.1",
    "isort~=6.0.1",
    "pytest~=8.4.1",
    "pre-commit~=4.3.0",
    "setuptools~=80.9.0",
    "build~=1.3.0",
    "twine~=6.1.0",
    "sourcery~=1.37.0",
    "click~=8.2.1",
    "ruff~=0.9.6",
    "hatch~=1.14.0",
    "mypy~=1.11.0",
]

[project.urls]
Homepage = "https://github.com/JakubAndrysek/MkDoxy"
Documentation = "https://mkdoxy.kubaandrysek.cz/"
Source = "https://github.com/JakubAndrysek/MkDoxy"
Tracker = "https://github.com/JakubAndrysek/MkDoxy/issues"
Funding = "https://github.com/sponsors/jakubandrysek"

[project.scripts]
mkdoxy = "mkdoxy.__main__:main"

[project.entry-points]
"mkdocs.plugins" = {mkdoxy = "mkdoxy.plugin:MkDoxy"}

[tool.setuptools.packages.find]
include = ["mkdoxy*"]

[tool.setuptools.package-data]
mkdoxy = ["templates/*.jinja2"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
extend-select = [
    "I",     # isort
    "C9",    # mccabe
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "ANN",   # flake8-annotations
    "S",     # bandit
    "BLE",   # flake8-blind-except
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "EXE",   # flake8-executable
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "G",     # flake8-logging-format
    "PIE",   # flake8-pie
    "PYI",   # flake8-pyi
    "RUF",   # Ruff-specific rules
]
extend-ignore = [
    "ANN101",  # Missing type annotation for self
    "ANN102",  # Missing type annotation for cls
    "S101",    # Assert statements are appropriate in test files
]

[tool.ruff.format]
# Configure formatting options
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.hatch.build.targets.wheel]
packages = ["mkdoxy"]

[tool.hatch.build.targets.sdist]
include = [
    "/mkdoxy",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.envs.default]
post-install-commands = [
    "pip install -e .[dev]",
]